<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_recon_drone</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize drone

event_inherited();
name = "Recon Drone";
hp = 10;
image_speed = 0;
depth = 0;
var remote_origin;

//Speed
move_speed = 4;
original_drone_speed = move_speed;

//Movement
going_up = false;
going_down = false;
going_left = false;
going_right = false;

move_up = ord('W');
move_down = ord('S');
move_left = ord('A');
move_right = ord('D');

//Make sure character stops moving
if(instance_exists(obj_char))
{
    obj_char.going_up = false;
    obj_char.going_down = false;
    obj_char.going_left = false;
    obj_char.going_right = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Restore character state
if instance_exists(obj_char)
{
    obj_char.state = states.NORMAL;
    view_object[0] = obj_char;
}

with(remote_origin)
{
    drone_deployed = false; //say the drone is no longer deployed

    //stop remote animation
    image_speed = 0;
    image_index = 0;
    alarm[1] = 15;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move and check hp
if hp &lt;= 0
{
    instance_destroy();
}
scr_char_move();

//Check distance to character
if instance_exists(obj_char)
{
    //drone loses connection
    if(distance_to_object(obj_char) &gt; 1000)
    {
        instance_destroy(); //if the drone gets to a certain distance destroy it
    }
    //drone signal warning
    else if(distance_to_object(obj_char) &gt; 800)
    {
        if(sprite_index == spr_recon_drone) //if the sprite is not flashing
        {
            tmp_image_index = image_index; 
            sprite_index = spr_recon_drone_err; //change the sprite to the flashing one
            image_index = tmp_image_index; //set the prop position to where it left off
        }
    }
    //if drone has returned to a safe range
    else if(sprite_index == spr_recon_drone_err)
    {
        tmp_image_index = image_index;
        sprite_index = spr_recon_drone; //change sprite back to nonflashing one
        image_index = tmp_image_index % 8;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Recall drone
/*if(instance_exists(obj_inventory))
{
    obj_inventory.can_use_items = true;
}*/
remote_origin.can_deploy = false;
//remote_origin.alarm[1] = 5;
remote_origin.image_index = 0;
remote_origin.image_speed = 0;
instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
