<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_floor</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
obj_loading_overlay.loading = true;
randomize();
room_speed = 240;
mv_speed = 32;
mv_dir = choose(0, 90, 180, 270);
alarm[0] = 25 + irandom(100);
alarm[1] = 5 + irandom(30);
motion_set(mv_dir, mv_speed);
generator_done = false;

if(instance_exists(obj_gameroom2_controller)) {
    obj_gameroom2_controller.generator_done = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Place walls and other terrain
if(instance_number(obj_floor_generator) == 1) {
    with(obj_floor) {
        for(var i=-32; i&lt;=32; i+=32) {
            for(var j=-32; j&lt;=32; j+=32) {
                if(not place_meeting(x+i, y+j, obj_floor)) {
                    instance_create(x+i, y+j, obj_terrain_wall);
                }
            }
        }

        // Level 1 difficulty 
        if(obj_universal_controller.world_difficulty == 1) {
            spawn_chance = irandom(1000);
            //terrain
            if(spawn_chance &gt;= 0 &amp;&amp; spawn_chance &lt;=1) {
                instance_create(x, y, obj_terrain_spikes);
            }
            else if(spawn_chance &gt;= 10 &amp;&amp; spawn_chance &lt;= 11) {
                instance_create(x, y, obj_terrain_freeze);
            }
            else if(spawn_chance &gt;= 20 &amp;&amp; spawn_chance &lt;= 21) {
                instance_create(x, y, obj_terrain_stickyfloor);
            }
            else if(spawn_chance &gt;= 30 &amp;&amp; spawn_chance &lt;= 31) {
                instance_create(x, y, obj_puzzle_room_entrance);
            }
            
            //enemies
            else if(spawn_chance &gt;= 30 &amp;&amp; spawn_chance &lt;= 31) {
                instance_create(x, y, obj_enemy1);
            }
            else if(spawn_chance &gt;= 40 &amp;&amp; spawn_chance &lt;= 41) {
                instance_create(x, y, obj_enemy2);
            }
            else if(spawn_chance &gt;=50 &amp;&amp; spawn_chance &lt;= 51) {
                instance_create(x, y, obj_enemy_butterfly);
            }
            else if(spawn_chance &gt;=60 &amp;&amp; spawn_chance &lt;=61) {
                instance_create(x, y, obj_enemy_summoner);
            }
        }
        // level 2 difficulty
        else if(obj_universal_controller.world_difficulty == 2) {
            spawn_chance = irandom(1000);
            //terrain
            if(spawn_chance &gt;= 0 &amp;&amp; spawn_chance &lt;=1) {
                instance_create(x, y, obj_terrain_spikes);
            }
            else if(spawn_chance &gt;= 10 &amp;&amp; spawn_chance &lt;= 11) {
                instance_create(x, y, obj_terrain_freeze);
            }
            else if(spawn_chance &gt;= 20 &amp;&amp; spawn_chance &lt;= 21) {
                instance_create(x, y, obj_terrain_stickyfloor);
            }
            else if(spawn_chance &gt;= 30 &amp;&amp; spawn_chance &lt;= 31) {
                instance_create(x, y, obj_terrain_slippery);
            }
            else if(spawn_chance &gt;= 40 &amp;&amp; spawn_chance &lt;= 41) {
                instance_create(x, y, obj_puzzle_room_entrance);
            }
            else if(spawn_chance &gt;= 50 &amp;&amp; spawn_chance &lt;= 51) { // new to lvl 2
                instance_create(x, y, obj_dungeon_pit_floor);
            }
            else if(spawn_chance &gt;= 60 &amp;&amp; spawn_chance &lt;= 61) { // new to lvl 2
                instance_create(x, y, obj_terrain_teleport);
            }
            
            //enemies
            else if(spawn_chance &gt;= 70 &amp;&amp; spawn_chance &lt;= 71) {
                instance_create(x, y, obj_enemy1);
            }
            else if(spawn_chance &gt;= 80 &amp;&amp; spawn_chance &lt;= 81) {
                instance_create(x, y, obj_enemy2);
            }
            else if(spawn_chance &gt;= 90 &amp;&amp; spawn_chance &lt;= 91) {
                instance_create(x, y, obj_enemy_butterfly);
            }
            else if(spawn_chance &gt;= 100 &amp;&amp; spawn_chance &lt;=101) {
                instance_create(x, y, obj_enemy_summoner);
            }
            else if(spawn_chance &gt;= 110 &amp;&amp; spawn_chance &lt;=111) { // new to lvl 2
                instance_create(x, y, obj_enemy_healer);
            }
            else if(spawn_chance &gt;= 120 &amp;&amp; spawn_chance &lt;= 121) { // new to lvl 2
                instance_create(x, y, obj_enemy_dig);
            }
            else if(spawn_chance &gt;= 130 &amp;&amp; spawn_chance &lt;= 131) { // new to lvl 2
                instance_create(x, y, obj_enemy_inker);
            }
        }
        // level 3 and 4 difficulty
        else {
            spawn_chance = irandom(1000);
            //terrain
            if(spawn_chance &gt;= 0 &amp;&amp; spawn_chance &lt;=1) {
                instance_create(x, y, obj_terrain_spikes);
            }
            else if(spawn_chance &gt;= 10 &amp;&amp; spawn_chance &lt;= 11) {
                instance_create(x, y, obj_terrain_freeze);
            }
            else if(spawn_chance &gt;= 20 &amp;&amp; spawn_chance &lt;= 21) {
                instance_create(x, y, obj_terrain_stickyfloor);
            }
            else if(spawn_chance &gt;= 30 &amp;&amp; spawn_chance &lt;= 31) {
                instance_create(x, y, obj_terrain_slippery);
            }
            else if(spawn_chance &gt;= 40 &amp;&amp; spawn_chance &lt;= 41) {
                instance_create(x, y, obj_puzzle_room_entrance);
            }
            else if(spawn_chance &gt;= 50 &amp;&amp; spawn_chance &lt;= 51) {
                instance_create(x, y, obj_dungeon_pit_floor);
            }
            else if(spawn_chance &gt;= 60 &amp;&amp; spawn_chance &lt;= 61) {
                instance_create(x, y, obj_terrain_teleport);
            }
            
            //enemies
            else if(spawn_chance &gt;= 70 &amp;&amp; spawn_chance &lt;= 71) {
                instance_create(x, y, obj_enemy1);
            }
            else if(spawn_chance &gt;= 80 &amp;&amp; spawn_chance &lt;= 81) {
                instance_create(x, y, obj_enemy2);
            }
            else if(spawn_chance &gt;= 90 &amp;&amp; spawn_chance &lt;= 91) {
                instance_create(x, y, obj_enemy_butterfly);
            }
            else if(spawn_chance &gt;= 100 &amp;&amp; spawn_chance &lt;=101) {
                instance_create(x, y, obj_enemy_summoner);
            }
            else if(spawn_chance &gt;= 110 &amp;&amp; spawn_chance &lt;=111) {
                instance_create(x, y, obj_enemy_healer);
            }
            else if(spawn_chance &gt;= 120 &amp;&amp; spawn_chance &lt;= 121) {
                instance_create(x, y, obj_enemy_dig);
            }
            else if(spawn_chance &gt;= 130 &amp;&amp; spawn_chance &lt;= 131) {
                instance_create(x, y, obj_enemy_inker);
            }
            else if(spawn_chance &gt;= 140 &amp;&amp; spawn_chance &lt;= 141) { // new to lvl 3
                instance_create(x, y, obj_enemy_duplicate_real);
            }
            else if(spawn_chance &gt;= 150 &amp;&amp; spawn_chance &lt;= 151) { // new to lvl 3
                instance_create(x, y, obj_enemy_snake_head);
            }
        }
    }
}      
        /* original spawning
        spawn_chance = irandom(1000);
        if(spawn_chance &gt;=0 &amp;&amp; spawn_chance &lt;=2) {
            instance_create(x, y, obj_terrain_stickyfloor);
        }
        else if(spawn_chance &gt;= 3 &amp;&amp; spawn_chance &lt;= 5) {
            instance_create(x, y, obj_terrain_slippery);
        }
        else if(spawn_chance &gt;= 6 &amp;&amp; spawn_chance &lt;= 8) {
            instance_create(x, y, obj_terrain_spikes);
        }
        else if(spawn_chance &gt;= 9 &amp;&amp; spawn_chance &lt;=9) {
            instance_create(x+16, y+16, obj_enemy1);
        }
        else if(spawn_chance &gt;= 11 &amp;&amp; spawn_chance &lt;= 11) {
            instance_create(x+16, y+16, obj_enemy2);
        }
        else if(spawn_chance &gt;= 12 &amp;&amp; spawn_chance &lt;= 13) {
            instance_create(x, y, obj_terrain_teleport);
        }
        else if(spawn_chance &gt;= 14 &amp;&amp; spawn_chance &lt;= 15) {
            instance_create(x, y, obj_terrain_freeze);
        }
        else if(spawn_chance == 16) {
            instance_create(x, y, obj_terrain_dungeon_pit);
        }
        else if(spawn_chance == 17) {
            instance_create(x, y, obj_puzzle_room_entrance);
        }
        else if(spawn_chance == 18) {
            instance_create(x+16, y+16, obj_enemy_butterfly);
        }
        else if(spawn_chance == 19) {
            instance_create(x+16, y+16, obj_enemy_dig);
        }
        else if(spawn_chance == 20) {
            instance_create(x+16, y+16, obj_enemy_duplicate_real);
        }
        else if(spawn_chance == 21) {
            instance_create(x+16, y+16, obj_enemy_healer);
        }
        else if(spawn_chance == 22) {
            instance_create(x+16, y+16, obj_enemy_snake_head);
        }
        else if(spawn_chance == 23) {
            instance_create(x+16, y+16, obj_enemy_summoner);
        }
        else if(spawn_chance == 24) {
            instance_create(x+16, y+16, obj_enemy_inker);
        }
        else if(spawn_chance == 25) {
            instance_create(x+16, y+16, obj_enemy_rock_thing);
        }
        else if(spawn_chance == 26) {
            instance_create(x+16, y+16, obj_spike);
        }
    }
}*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn room exits

if(instance_number(obj_floor_generator) == 1) {
    //Spawn East Exits
    if(obj_universal_controller.room_x != obj_universal_controller.grid_width-1) {
        room_type = abs(ds_grid_get(obj_universal_controller.room_config, 
            obj_universal_controller.room_x+1,
            obj_universal_controller.room_y));
        if(room_type == 1 || room_type == 3) {
            var check_x = room_width;
            var check_y = 0;
            var last_run = false;
            
            while(!last_run &amp;&amp; check_x &gt;= 0) {
                while(check_y &lt; room_height-1024) {
                    //if(not place_empty(check_x, check_y)) {
                    if(place_meeting(check_x, check_y, obj_terrain_wall)) {
                        last_run = 1;
                        with(instance_position(check_x, check_y, obj_terrain_wall)) {
                            instance_destroy();
                        }
                    }
                    else if(last_run){
                        break;
                    }
                    if(last_run) {
                        with(instance_create(check_x, check_y, obj_next_room)) {
                            dir = 0;
                        }
                    }
                    check_y+=32;
                }
                check_y = 0;
                check_x-=32;
            }
        }
        else if(room_type == 4) {
            var check_x = room_width;
            var check_y = 0;
            var last_run = false;
            
            while(!last_run &amp;&amp; check_x &gt;= 0) {
                while(check_y &lt; room_height-1024) {
                   //if(not place_empty(check_x, check_y)) {
                   if(place_meeting(check_x, check_y, obj_terrain_wall)) {
                       last_run = 1;
                       with(instance_position(check_x, check_y, obj_terrain_wall)) {
                           instance_destroy();
                       }
                   }
                   else if(last_run){
                       break;
                   }
                   if(last_run) {
                      with(instance_create(check_x, check_y, obj_to_boss_room)) {
                          dir = 0;
                       }
                   }
                   check_y+=32;
                }
                check_y = 0;
                check_x-=32;
            }
       }
    }
        
    //Spawn North Exits
    if(obj_universal_controller.room_y != 0) {
       room_type = abs(ds_grid_get(obj_universal_controller.room_config, 
               obj_universal_controller.room_x,
               obj_universal_controller.room_y-1));
       if(room_type == 1 || room_type == 3) {
            check_x = 0;
            check_y = 0;
            last_run = false;
            
           while(!last_run &amp;&amp; check_y &lt; room_height-1024) {
                while(check_x &lt; room_width) {
                    //if(not place_empty(check_x, check_y)) {
                    if(place_meeting(check_x, check_y, obj_terrain_wall)) {
                        last_run = 1;
                        with(instance_position(check_x, check_y, obj_terrain_wall)) {
                            instance_destroy();
                        }
                    }
                    else if(last_run){
                        break;
                    }
                    if(last_run) {
                        with(instance_create(check_x, check_y, obj_next_room)) {
                            dir = 1;
                        }
                    }
                    check_x+=32;
                }
                check_x = 0;
                check_y+=32;
            }
        }
        else if(room_type == 4) {
            check_x = 0;
            check_y = 0;
            last_run = false;
            
            while(!last_run &amp;&amp; check_y &lt; room_height-1024) {
                while(check_x &lt; room_width) {
                    //if(not place_empty(check_x, check_y)) {
                   if(place_meeting(check_x, check_y, obj_terrain_wall)) {
                        last_run = 1;
                        with(instance_position(check_x, check_y, obj_terrain_wall)) {
                            instance_destroy();
                        }
                    }
                    else if(last_run){
                        break;
                    }
                    if(last_run) {
                        with(instance_create(check_x, check_y, obj_to_boss_room)) {
                            dir = 1;
                        }
                    }
                    check_x+=32;
                }
                check_x = 0;
                check_y+=32;
            }
        }
    }    
    //Spawn West Exits
    if(obj_universal_controller.room_x != 0) {
        room_type = abs(ds_grid_get(obj_universal_controller.room_config, 
            obj_universal_controller.room_x-1,
            obj_universal_controller.room_y));
        if(room_type == 1 || room_type == 3) {
            check_x = 0;
            check_y = 0;
            last_run = false;
            
            while(!last_run &amp;&amp; check_x &lt; room_width) {
                while(check_y &lt; room_height-1024) {
                    //if(not place_empty(check_x, check_y)) {
                    if(place_meeting(check_x, check_y, obj_terrain_wall)) {
                        last_run = 1;
                        with(instance_position(check_x, check_y, obj_terrain_wall)) {
                            instance_destroy();
                        }
                    }
                    else if(last_run){
                        break;
                    }
                    if(last_run) {
                        with(instance_create(check_x, check_y, obj_next_room)) {
                            dir = 2;
                        }
                    }
                    check_y+=32;
                }
                check_y = 0;
                check_x+=32;
            }
        }
        else if(room_type == 4) { //spawn boss room entrance
            check_x = 0;
            check_y = 0;
            last_run = false;
            
            while(!last_run &amp;&amp; check_x &lt; room_width) {
                while(check_y &lt; room_height-1024) {
                    //if(not place_empty(check_x, check_y)) {
                    if(place_meeting(check_x, check_y, obj_terrain_wall)) {
                        last_run = 1;
                        with(instance_position(check_x, check_y, obj_terrain_wall)) {
                            instance_destroy();
                        }
                    }
                    else if(last_run){
                        break;
                    }
                    if(last_run) {
                        with(instance_create(check_x, check_y, obj_to_boss_room)) {
                            dir = 2;
                        }
                    }
                    check_y+=32;
                }
                check_y = 0;
                check_x+=32;
            }
        }
    }
    
    //Spawn South Exits
    if(obj_universal_controller.room_y != obj_universal_controller.grid_height-1) {
        room_type = abs(ds_grid_get(obj_universal_controller.room_config, 
            obj_universal_controller.room_x,
            obj_universal_controller.room_y+1));
        if(room_type == 1 || room_type == 3) {
            check_x = 0;
            check_y = room_height-1024;
            last_run = false;
            
            while(!last_run &amp;&amp; check_y &gt;=0) {
                while(check_x &lt; room_width) {
                    //if(not place_empty(check_x, check_y)) {
                    if(place_meeting(check_x, check_y, obj_terrain_wall)) {
                        last_run = 1;
                        with(instance_position(check_x, check_y, obj_terrain_wall)) {
                            instance_destroy();
                        }
                    }
                    else if(last_run){
                        break;
                    }
                    if(last_run) {
                        with(instance_create(check_x, check_y, obj_next_room)) {
                            dir = 3;
                        }
                    }
                    check_x+=32;
                }
                check_x = 0;
                check_y-=32;
            }
        }
        else if(room_type == 4) { //spawn boss room entrance
            check_x = 0;
            check_y = room_height-1024;
            last_run = false;
            
            while(!last_run &amp;&amp; check_y &gt;=0) {
                while(check_x &lt; room_width) {
                    //if(not place_empty(check_x, check_y)) {
                    if(place_meeting(check_x, check_y, obj_terrain_wall)) {
                        last_run = 1;
                        with(instance_position(check_x, check_y, obj_terrain_wall)) {
                            instance_destroy();
                        }
                    }
                    else if(last_run){
                        break;
                    }
                    if(last_run) {
                        with(instance_create(check_x, check_y, obj_to_boss_room)) {
                            dir = 3;
                        }
                    }
                    check_x+=32;
                }
                check_x = 0;
                check_y-=32;
            }
        }
    }
    
    instance_create(10, 10, obj_gameroom2_controller);
    generator_done = true;
    obj_char.state = states.NORMAL;
    
    obj_loading_overlay.loading = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move character
if(not obj_universal_controller.moving_from_town) {
    if(generator_done) {
        scr_position_character();
    }
}
else {
    if(generator_done) {
        obj_universal_controller.moving_from_town = false;
        number_of_floor = instance_number(obj_floor);
        start_floor_num = irandom(number_of_floor);
        start_floor_inst = instance_find(obj_floor, start_floor_num);
        obj_char.x = start_floor_inst.x+16;
        obj_char.y = start_floor_inst.y+16;
        obj_char.state = states.NORMAL;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create new grid for room
mp_grid_destroy(global.grid)
global.grid = mp_grid_create(0, 0, room_width/32, room_height/32, 32, 32);
mp_grid_add_instances(global.grid, obj_terrain_wall, 1);
mp_grid_add_instances(global.grid, obj_next_room, 1);
mp_grid_add_instances(global.grid, obj_to_boss_room, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Choose direction

mv_dir = choose(0, 90, 180, 270);
motion_set(mv_dir, mv_speed);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Generate floor and possibly more generators

for(i=-32; i&lt;=32; i+=32) {
    for(j=-32; j&lt;=32; j+=32) {
        if(not place_meeting(x+i, y+j, obj_floor)) {
            instance_create(x+i, y+j, obj_floor);
        }
    }
}

if(x&lt;=512 || x&gt;=room_width-512 || y&lt;=512 || y&gt;=room_height-1792) {
    instance_destroy();
}
else {
    open_area_chance = irandom(10 * instance_number(obj_floor_generator));
    
    if(open_area_chance == 0) {
        area_h = choose(3, 4, 5, 6);
        area_w = choose(3, 4, 5, 6);
        for(var i=-area_w; i&lt;=area_w; i++) {
            for(var j=-area_h; j&lt;=area_h; j++) {
                if(point_in_rectangle(i*32+x, j*32+y, 0, 0, room_width, room_height)) {
                    instance_create(x+(i*32), y+(j*32), obj_floor);
                }
            }
        }
    }
    
    gen_chance = irandom(15 * instance_number(obj_floor_generator));
    
    if(gen_chance == 0) {
        instance_create(x, y, obj_floor_generator);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
