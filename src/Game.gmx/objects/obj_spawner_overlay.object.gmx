<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-30</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variables

opened = false;
first_opening = false;

enemy_base = obj_enemy_base;
item_base = obj_item;
enemies[0] = obj_enemy_base;
items[0] = obj_item;
var current_enemy = 0;
var current_item = 0;
//var object is an object_index
for(var object = 0; object_exists(object); object++)
{
    if(object_is_ancestor(object, enemy_base))
    {
        if(object == obj_enemy_duplicate_fake || object == obj_enemy_snake_body || object == obj_boss3_fake)
        {
            continue;
        }
        else
        {
            enemies[current_enemy++] = object;
        }
    }
    else if(object_is_ancestor(object, item_base))
    {
        items[current_item++] = object;
    }
}
enemies_length = array_length_1d(enemies);
cells_x[enemies_length-1] = 0;
cells_y[enemies_length-1] = 0;
selected_enemy = -1;
dropping_object = false;
can_drop = false;
cooldown = room_speed / 4;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_drop = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Toggle inventory

first_opening = false;
if(keyboard_check_pressed(vk_backspace))
{
    opened = !opened;
    //Say this is the first time opening the escape menu
    if opened { 
        first_opening = true;
        
        dropping_object = false;
    }
}
if(dropping_object and can_drop)
{
    if(mouse_check_button(mb_left))
    {
        sdb("dropping enemy " + object_get_name(enemies[selected_enemy]));
        instance_create(mouse_x, mouse_y, enemies[selected_enemy]);
        alarm[0] = cooldown;
        can_drop = false;
    }
}
if(not opened)
{
    if(dropping_object)
    {
        if(mouse_check_button_released(mb_right))
        {
            dropping_object = false;
        }
    }
    else
    {
        if(instance_exists(obj_escape_overlay))
        {
            if(not obj_escape_overlay.opened)
            {
                if(instance_exists(obj_inventory) &amp;&amp; not instance_exists(obj_recon_drone)
                    &amp;&amp; not instance_exists(obj_att_drone)) {
                    obj_inventory.disabled = false;
                    obj_inventory.can_use_items = true;
                }
            }
        }
        
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Save previous alpha

previous_alpha = draw_get_alpha();
previous_color = draw_get_colour();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the menu on escape press

if(opened)
{    
    if(instance_exists(obj_inventory)) {
        obj_inventory.disabled = true;
        obj_inventory.can_use_items = false;
    }
    opened = true;
    draw_set_alpha(0.12);
    draw_set_colour(c_black);
    v_x = view_xview[0];
    v_y = view_yview[0];
    v_width = view_wview[0];
    v_height = view_hview[0];
    draw_rectangle(v_x, v_y, v_x + v_width, v_y + v_height, false);
    draw_set_alpha(1);
    draw_set_color(c_black);
    draw_set_font(font_command);
    
    var xx = v_x + 50;
    var yy = v_y + 100;
    for(var i = 0; i &lt; enemies_length; i++)
    {
        var sprite = object_get_sprite(enemies[i]);
        if(sprite &gt; -1)
        {
            draw_sprite_stretched(sprite, -1, xx, yy, 64, 64);
        }
        draw_set_halign(fa_center);
        draw_text(xx+32,yy+64,object_get_name(enemies[i]));
        cells_x[i] = xx;
        cells_y[i] = yy;
        if(point_in_rectangle(mouse_x, mouse_y, xx, yy, xx+64, yy+64))
        {
            //show_debug_message("Selected " + object_get_name(enemies[i]));
            if(mouse_check_button_pressed(mb_left))
            {
                selected_enemy = i;
                opened = false;
                dropping_object = true;
                can_drop = false;
                alarm[0] = room_speed / 4;
            }
        }
        xx += 100;
        if(xx &gt; v_x+910)
        {
            yy += 100;
            xx = v_x+50;
        }   
    }   
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Restore alpha and color

draw_set_colour(previous_color);
draw_set_alpha(previous_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
