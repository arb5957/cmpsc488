<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_invisible</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start in fullscreen and other initialization code.

application_surface_draw_enable(false);
window_set_fullscreen(true); //For mac setting needs to be checked: start in fullscreen or this will fail.

global.MonitorW=display_get_width();
global.MonitorH=display_get_height();

//Moved this to room initialization because it was messing up obj_view.
//global.game_width = 480;
//global.game_height = 270;
window_width = global.MonitorW;
window_height = global.MonitorH;

//Note that resolutions above 1080p will have issues.
global.scaling_factor = 2;

window_width = global.scaling_factor * global.game_width;
window_height = global.scaling_factor * global.game_height;

surface_resize(application_surface,window_width,window_height)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="74">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the game surface.

//If our game surface is smaller than our window, we need to center
//the game surface in the middle of the screen.
if(window_width &lt; window_get_width() || window_height &lt; window_get_height())
{    
    global.Xoffset=(window_get_width()-window_width)/2;
    global.Yoffset=(window_get_height()-window_height)/2;
}
else
{//Otherwise, we can start drawing it from top left.
    global.Xoffset = 0;
    global.Yoffset = 0;
}
//Draw the game surface.
draw_surface_ext(application_surface,global.Xoffset,global.Yoffset,1,1,0,c_white,1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
