<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_nothing</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-30</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create the starting inventory.

totalSlots = 17;
curSlot = 0;
canDraw = false;
canUse = true;
cooldown = 120;
dagger_equip = false;

for(i = 0; i &lt; totalSlots; i++){
    global.slot[i] = "noone";
}

for(i = 0; i &lt; totalSlots; i++){
    coordX[i] = 0;
}

for(i = 0; i &lt; totalSlots; i++){
    coordY[i] = 0;
}

for(i = 0; i &lt;= 2; i++){
    equipped[i] = false;
}

scr_startingvalues();

spr = spr_nothing;
slotTaken = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canUse = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Switch between inventory on and off
if(!canDraw &amp;&amp; keyboard_check_pressed(vk_lshift)){
    canDraw = true;
    return 0;
}
if(canDraw &amp;&amp; keyboard_check_pressed(vk_lshift)){
    canDraw = false;
    spr = spr_nothing;
    return 0;
}



//Check if the dagger is equipped
//Golden egg, can implement later
/*
if(global.slot[15] == "dagger2"){
    instance_create(obj_char.x, obj_char.y, obj_dagger);
}

if(global.slot[15] != "dagger2"){
    with(obj_dagger) instance_destroy();
}
*/




if(global.slot[15] == "dagger2" &amp;&amp; !equipped[0]){
    instance_create(obj_char.x, obj_char.y, obj_dagger);
    equipped[0] = true;
}
if(global.slot[15] != "dagger2" &amp;&amp; equipped[0]){
    with(obj_dagger) instance_destroy();
    equipped[0] = false;
}

if(global.slot[15] == "bow2" &amp;&amp; !equipped[1]){
    instance_create(obj_char.x, obj_char.y, obj_bow);
    equipped[1] = true;
}
if(global.slot[15] != "bow2" &amp;&amp; equipped[1]){
    with(obj_bow) instance_destroy();
    equipped[1] = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//How big do we want our inventory to be?



if(canDraw){
    var cellWidth = 48;
    var cellHeight = 48;
    
    draw_set_color(c_gray);
    draw_set_alpha(0.8);
    draw_set_font(font_inventory);
    
    var startX = view_xview[0] + 256;
    var startY = view_yview[0] + 144;
    
    var width = 576;
    var height = 288;


    draw_rectangle(startX, startY, startX + width, startY + height, false);
    
    
    var xx = startX + 32;
    var yy = startY + 32;
    draw_set_color(c_green);
    draw_set_alpha(0.95);
    draw_rectangle(xx, yy, xx + cellWidth, yy + cellHeight, false);
    coordX[15] = xx;
    coordY[15] = yy;
    
    
    for(xx = startX + 32; xx &lt; startX + width; xx+=110){
        for(yy = startY + 96; yy &lt; startY + height; yy += 64){
            coordX[curSlot] = xx;
            coordY[curSlot] = yy;
            
            draw_set_color(c_dkgray);
            draw_set_alpha(0.95);
            draw_rectangle(xx, yy, xx + cellWidth, yy + cellHeight, false);
            curSlot++;
            if(curSlot &gt;= totalSlots-2){
                curSlot = 0;    
            }
        }
        scr_manageObjects(cellWidth, cellHeight);
    }
    
    draw_set_alpha(1);
    draw_set_color(c_white);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drink potion

if(canUse == true)
{
    alarm[0] = cooldown;
    
    if(global.item[1] &gt; 0 &amp;&amp; global.slot[15] == "potion")
    {
        obj_char.hp+=5;
        global.item[1]--;   
    }

    canUse = false;   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
